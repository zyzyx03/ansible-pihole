---
# tasks file for ansible-pihole

- name: update all package
  yum:
    name: '*'
    state: latest

- name: ensure git is installed
  yum:
    name: git
    state: present

- name: install remi repo
  yum:
    name: "{{ pihole_remi_repo }}"
    state: present

- name: check for existing installation of pihole
  stat:
    path: "{{ pihole_bin_path }}"
  register: pihole_bin

- name: install pihole
  block:
    - name: ensure pihole group exists for pi user
      group:
        name: "{{ pihole_group }}"
        state: present

    - name: create pihole user
      user:
        name: "{{ pihole_user }}"
        shell: /sbin/nologin
        groups: "{{ pihole_group }}"

    - name: check if pihole etc dir exists
      stat:
        path: "{{ pihole_etc_dir }}"
      register: pi_etc_dir

    - name: making pihole etc directory
      file:
        path: "{{ pihole_etc_dir }}"
        state: directory
        mode: 0755
      when:
        - not pi_etc_dir.stat.exists

    - name: pushing config file setupVars
      template:
        src: setupVars.conf.j2
        dest: "{{ pihole_etc_dir }}/setupVars.conf"
        mode: 0644

    - name: installing pihole 
      shell:
        cmd: "curl -L https://install.pi-hole.net | bash /dev/stdin --unattended"

  when:
    - not pihole_bin.stat.exists or pihole_reinstall

- name: "check and apply updates to pihole"
  command: "{{ pihole_bin_path }} updatePihole"
  register: updatePihole
  when:
    - pihole_bin.stat.exists
    - pihole_update
    - not pihole_reinstall

- name: Output from update
  debug:
    var: updatePihole.stdout_lines
  when: updatePihole.changed == true

- name: Finished! ipv4
  debug:
    msg: "visit http://{{ ansible_default_ipv4.address }}/admin/ to start managing your pi-hole"
